# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $term alacritty
# set $menu rofi -show run -theme ~/documents/custom-nord.rasi
set $menu rofi -show run
set $window_switcher rofi -show window
set $notification_display rofication-gui.py

set $monitor1 DP-3
set $monitor2 DP-4

set $WS1 "1: "
set $WS2 "2: "
set $WS3 "3: "
set $WS4 "4: "
set $WS5 "5: "
set $WS6 "6: "
set $WS7 "7: "
set $WS8 "8: "
set $WS9 "9: "
set $WS10 "10: "
set $WS11 "11: "
set $WS12 "12: "

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:OperatorMono 6
# font pango:input sans compressed 7
# font pango:input sans 6
# font pango:InputSansCompressed Font Awesome 6
# font pango:gohufont 8
font pango:iosevka nerd font 10
# font pango:Dina 5
# font pango:Monofur 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+Shift+c kill

# start dmenu (a program launcher)
bindsym $mod+d exec $menu
bindsym $mod+semicolon exec $menu
bindsym $mod+apostrophe exec $window_switcher
bindsym $mod+t exec $notification_display
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Tab focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace $WS1
bindsym $mod+2 workspace $WS2
bindsym $mod+3 workspace $WS3
bindsym $mod+4 workspace $WS4
bindsym $mod+5 workspace $WS5
bindsym $mod+6 workspace $WS6
bindsym $mod+7 workspace $WS7
bindsym $mod+8 workspace $WS8
bindsym $mod+9 workspace $WS9
bindsym $mod+0 workspace $WS10
bindsym $mod+minus workspace $WS11
bindsym $mod+equal workspace $WS12

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1
bindsym $mod+Shift+2 move container to workspace $WS2
bindsym $mod+Shift+3 move container to workspace $WS3
bindsym $mod+Shift+4 move container to workspace $WS4
bindsym $mod+Shift+5 move container to workspace $WS5
bindsym $mod+Shift+6 move container to workspace $WS6
bindsym $mod+Shift+7 move container to workspace $WS7
bindsym $mod+Shift+8 move container to workspace $WS8
bindsym $mod+Shift+9 move container to workspace $WS9
bindsym $mod+Shift+0 move container to workspace $WS10
bindsym $mod+Shift+minus move container to workspace $WS11
bindsym $mod+Shift+equal move container to workspace $WS12

# reload the configuration file
bindsym $mod+Shift+i reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+Ctrl+k focus output right
bindsym $mod+Ctrl+j focus output left

bindsym $mod+bracketright focus output right
bindsym $mod+bracketleft focus output left

bindsym $mod+backslash workspace back_and_forth

bindsym $mod+x move workspace to output right
bindsym $mod+Shift+x move workspace to output up

# Scratchpad

bindsym $mod+Shift+z move scratchpad
bindsym $mod+z scratchpad show

bindsym $mod+g exec "jk chat"
bindsym $mod+b exec "jk code"
bindsym $mod+p exec "jk party"

# Workspace position

workspace $WS1 output $monitor1
workspace $WS2 output $monitor1
workspace $WS7 output $monitor1
workspace $WS8 output $monitor1
workspace $WS9 output $monitor1

workspace $WS10 output $monitor2
workspace $WS11 output $monitor2
workspace $WS12 output $monitor2

# Windows to workspaces

assign [class="^Atom$"] $WS9
assign [class="^Firefox$"] $WS10
assign [class="^Chromium$"] $WS11

# For some reason we need `for_window` for spotify
# https://www.reddit.com/r/i3wm/comments/5oxosf/assigning_spotify_to_a_workspace/dcnwxcg/
for_window [class="^Spotify$"] move to workspace $WS12
# Move Terminal with name scratchpad to the scratchpad
for_window [class="^(Termite|Alacritty)$" title="scratchpad"] move scratchpad
for_window [class="gnome-pie.*"] floating enable
# for_window [title="^Spacerun.*"] floating enable
# browser pop-ups
for_window [window_role="pop-up"] floating enable

assign [title="Android Emulator"] $WS11
for_window [title="Android Emulator"] floating enable

# bindsym $mod+g [class="go-for-it"] focus

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod+space exec spacerun

bindsym --release $mod+shift+p exec "scrot -s"

bindsym $mod+ctrl+l exec "notify-send 'locking...' && lock"

# Count for the 2-1 merge system :P
bindsym $mod+ctrl+m exec "expr $(cat ~/.to-merge) - 1 > ~/.to-merge"
bindsym $mod+ctrl+p exec "expr $(cat ~/.to-merge) + 2 > ~/.to-merge"

# bindsym $mod+ctrl+shift+bracketleft exec zshdo cmdpasta ruby /home/linucc/scripts/bl/pivotal.rb last_started_story id
# bindsym $mod+ctrl+shift+bracketright exec zshdo cmdpasta ruby /home/linucc/scripts/bl/pivotal.rb last_started_story url
# bindsym $mod+ctrl+bracketleft exec zshdo pasta ruby /home/linucc/scripts/bl/pivotal.rb last_started_story id
# bindsym $mod+ctrl+bracketright exec zshdo pasta ruby /home/linucc/scripts/bl/pivotal.rb last_started_story url

# bindsym $mod+ctrl+semicolon exec zshdo pasta blgithubprstorylink
# bindsym $mod+ctrl+l exec zshdo pasta bltimeneyestorylink

bindsym $mod+ctrl+bracketright exec basiczshdo cmdpasta bl_jirastory_markdown_link

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86MonBrightnessUp exec inc_brightness
bindsym XF86MonBrightnessDown exec dec_brightness
bindsym XF86AudioMute exec --no-startup-id toggle_mute_volume
# bindsym XF86AudioMicMute exec ???
bindsym XF86AudioRaiseVolume exec --no-startup-id inc_volume
bindsym XF86AudioLowerVolume exec --no-startup-id dec_volume
# bindsym XF86LaunchA exec ???
# bindsym XF86Explorer exec ???

# Nord theme colors

set $nord0   #2E3440
set $nord1   #3B4252
set $nord2   #434C5E
set $nord3   #4C566A
set $nord4   #D8DEE9
set $nord5   #E5E9F0
set $nord6   #ECEFF4
set $nord7   #8FBCBB
set $nord8   #88C0D0
set $nord9   #81A1C1
set $nord10  #5E81AC
set $nord11  #BF616A
set $nord12  #D08770
set $nord13  #EBCB8B
set $nord14  #A3BE8C
set $nord15  #B48EAD

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  strip_workspace_numbers yes
  status_command i3blocks
        tray_output primary
  position top
  colors {
    separator #666666
    # background #222222
    # statusline #dddddd
    # focused_workspace #0088CC #0088CC #ffffff
    # active_workspace #333333 #333333 #ffffff
    # inactive_workspace #333333 #333333 #888888
    # urgent_workspace #2f343a #900000 #ffffff

    background $nord0
	  statusline $nord8

    focused_workspace  $nord3  $nord8
	  active_workspace   $nord3  $nord8
	  inactive_workspace $nord8  $nord3
    urgent_workspace $nord3 $nord15
  }
}

#class                      border         backgr	  text	   indicator
# client.focused #0088CC #0088CC #ffffff #dddddd
# client.focused_inactive #333333 #333333 #888888 #292d2e
# client.unfocused #333333 #333333 #888888 #292d2e
# client.urgent #2f343a #900000 #ffffff #900000

client.focused $nord10 $nord10 $nord6 #dddddd
client.focused_inactive $nord2 $nord2 $nord4 #292d2e
client.unfocused $nord0 $nord0 $nord4 #292d2e
client.urgent #2f343a $nord11 $nord4 #900000

# client.focused		        #2C313D        #2e3440        $background  $background
# client.focused_inactive	    #2C313D        #303743        $background  $background
# client.unfocused	        #2C313D        #303743        $background  $background
# client.urgent		        $background    #282d37    $background  $background
# client.placeholder $background #282D37 $background $background

#
# Gaps specific stuff
#

# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 0

smart_borders on
smart_gaps on

gaps outer 2
gaps inner 12



#
# ==== Custom modes ====
#

set $mode_sysmenu "system:  [r]eload  [l]ogout  [p]oweroff  re[b]oot"
mode $mode_sysmenu {
    bindsym r         restart
    bindsym l         exit
    bindsym p         exec shutdown -P now
    bindsym b         exec shutdown -r now
    bindsym Return    mode "default"
    bindsym Escape    mode "default"
}

set $mode_devhint \
  "Devhint: [e]dit [s]erver"
mode $mode_devhint {
    bindsym e          exec $term -t "Edit devhint" -e /bin/bash -ilc "cd ~/code/markdown/devhint && nvim ." ; mode "default"
    bindsym s          exec $term -t "Server devhint" -e "/bin/bash" -ilc "cd ~/code/markdown/devhint && docker-compose up" ; mode "default"

    # back to normal: Enter or Escape
    bindsym Return     mode "default"
    bindsym Escape     mode "default"
}

set $mode_multi_runner \
  "<Multi>Runner (Esc/Return: go back): Custom:(Run[<1-3>]/Edit[Shift+<1-3>]) \
| Edit: \
[i]3Config [n]eovim \
| More Options: \
[d]evhint \
[o]fflineimap \
[a]lot \
[f]irefox \
[v]ivaldi \
[c]hromium \
"
mode $mode_multi_runner {
    bindsym 1    exec run-temp-script 1
    bindsym 2    exec run-temp-script 2
    bindsym 3    exec run-temp-script 3

    bindsym Shift+1    exec $term -e "/bin/bash" -ilc "edit-temp-script 1"
    bindsym Shift+2    exec $term -e "/bin/bash" -ilc "edit-temp-script 2"
    bindsym Shift+3    exec $term -e "/bin/bash" -ilc "edit-temp-script 3"

    bindsym d          mode $mode_devhint
    bindsym n          exec $term -e "/bin/bash" -ilc "nvim ~/.config/nvim/init.vim"
    bindsym i          exec $term -e "/bin/bash" -ilc "nvim ~/.config/i3/config"
    bindsym o          exec $term -e "/bin/bash" -ilc "offlineimap"
    bindsym a          exec $term -e "/bin/bash" -ilc "alot"
    bindsym f          exec firefox
    bindsym v          exec vivaldi-stable
    bindsym c          exec chromium

    # back to normal: Enter or Escape
    bindsym Return     mode "default"
    bindsym Escape     mode "default"
}

set $mode_runner \
  "Script runner/editor: Custom:(Run[<1-3>]/Edit[Shift+<1-3>]) \
| Edit: \
[i]3Config [n]eovim \
| More Options: \
c[m]dr \
[d]evhint \
[o]fflineimap \
[a]lot \
[f]irefox \
[v]ivaldi \
[c]hromium \
 [p]projects \
 [<space>] Multirunner mode \
"
mode $mode_runner {
    bindsym 1    exec run-temp-script 1 ; mode "default"
    bindsym 2    exec run-temp-script 2 ; mode "default"
    bindsym 3    exec run-temp-script 3 ; mode "default"

    bindsym Shift+1    exec $term -e "/bin/bash" -ilc "edit-temp-script 1" ; mode "default"
    bindsym Shift+2    exec $term -e "/bin/bash" -ilc "edit-temp-script 2" ; mode "default"
    bindsym Shift+3    exec $term -e "/bin/bash" -ilc "edit-temp-script 3" ; mode "default"

    bindsym m          exec $term -e /bin/zsh -ilc "cmdr" ; mode "default"

    bindsym d          mode $mode_devhint
    bindsym n          exec $term -t "NeoVim config" -e "/bin/bash" -ilc "nvim ~/.config/nvim/init.vim" ; mode "default"
    bindsym i          exec $term -t "i3 config" -e "/bin/bash" -ilc "nvim ~/.config/i3/config" ; mode "default"
    bindsym o          exec $term -t "offlineimap" -e "/bin/bash" -ilc "offlineimap" ; mode "default"
    bindsym a          exec $term -t "alot" -e "/bin/bash" -ilc "alot" ; mode "default"
    bindsym f          exec firefox ; mode "default"
    bindsym v          exec vivaldi-stable ; mode "default"
    bindsym c          exec chromium ; mode "default"

    # Multi runner
    bindsym space      mode $mode_multi_runner
    bindsym p          mode $mode_projects

    # back to normal: Enter or Escape
    bindsym Return     mode "default"
    bindsym Escape     mode "default"
}

set $mode_projects \
  "Projects: [f]dc [k]f"
mode $mode_projects {
    bindsym f          mode $mode_fdc_projects
    bindsym k          mode $mode_kf_projects

    # back to normal: Enter or Escape
    bindsym Return     mode "default"
    bindsym Escape     mode "default"
}

set $mode_fdc_projects \
  "FDC Projects: [c]heckout-responsive"
mode $mode_fdc_projects {
    bindsym c          exec $term -t "Edit CheckoutResponsive" -e /bin/zsh -ilc "edflcre" ; mode "default"

    # back to normal: Enter or Escape
    bindsym Return     mode "default"
    bindsym Escape     mode "default"
}

set $mode_kf_projects \
  "Käsefüße Projects: graphql-[s]erver react-[c]lient [g]raphql-types"
mode $mode_kf_projects {
    bindsym s          exec $term -t " KF Server" -e /bin/zsh -ilc "edkfsrv" ; mode "default"
    bindsym c          exec $term -t " KF Client" -e /bin/zsh -ilc "edkfcli" ; mode "default"
    bindsym g          exec $term -t " KF GQL Types" -e /bin/zsh -ilc "edkfgql" ; mode "default"

    # back to normal: Enter or Escape
    bindsym Return     mode "default"
    bindsym Escape     mode "default"
}

bindsym $mod+Delete      mode $mode_sysmenu
bindsym $mod+period      mode $mode_runner

#
# ====/Custom modes ====
#

# Autostart

exec termite -t scratchpad

bindsym $mod+ctrl+plus exec ~/scripts/start_up/multi_work
